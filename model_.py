# -*- coding: utf-8 -*-
"""model .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SK4FfsbMQWVc2CiVqK1l7WeLGwxVA8Ws
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
from sklearn.cluster import KMeans

# Load the processed dataset
df_encoded = pd.read_csv('res_dpre.csv')

# Choose the three most suitable columns for K-means clustering
columns_for_kmeans = ['num_of_children', 'total_money_spent', 'total_num_of_purchases']
# Scale the selected columns
scaler = MinMaxScaler()
df_scaled = scaler.fit_transform(df_encoded[columns_for_kmeans])

# Perform K-means clustering
kmeans = KMeans(n_clusters=3, random_state=50)
df_encoded['Cluster'] = kmeans.fit_predict(df_scaled)

# Count the number of records in each cluster
cluster_counts = df_encoded['Cluster'].value_counts()

# Save the cluster counts to a text file
cluster_counts.to_csv('k.txt', index=False)

# Print the cluster counts
print('Cluster Counts:')
print(cluster_counts)